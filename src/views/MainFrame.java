/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import Final_Project_Algo.Index;
import Final_Project_Algo.Search;
import Final_Project_Algo.Calculations;
import Final_Project_Algo.File_And_Sentence;

/**
 *
 * @author Smeet
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    
    //In main frame the main algorithm running is getting the search keyword from user and sorting 
    //it accordingly and displaying the results 
    
    
    Index idx;
    private Map<String, Map> retrieveFile;
    private Map<Integer, String> retrieveWord;
    private Map<String, Map> retrieveLine;

    public MainFrame() throws FileNotFoundException, IOException {
        initComponents();
        idx = Index.getMainMaps();
        idx.index();
        retrieveFile = idx.getRetrieveFile();
        retrieveWord = idx.getRetrieveWord();
        retrieveLine = idx.getRetrieveLine();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Search = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("   Information Retrieval Systems");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(275, 275, 275))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        String search = Search.getText();  //enter search word or phrase
        Search sc = null;
        try {
            sc = new Search();
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        HashMap hm = sc.search(Arrays.asList(search.split(" ")));
        Set set = hm.entrySet();
        // Get an iterator
        Iterator i = set.iterator();
        ArrayList<Calculations> t2 = new ArrayList<>();
        Set<String> s = new LinkedHashSet<>();
        // Display elements
        while (i.hasNext()) {
            Map.Entry me = (Map.Entry) i.next();

            t2.add((Calculations) me.getValue());
        }

        //tree maps for sorting
        Map<Float, File_And_Sentence> oneshm = new TreeMap<>();
        Map<Float, File_And_Sentence> twoshm = new TreeMap<>();
        Map<Float, File_And_Sentence> rest = new TreeMap<>();
        File_And_Sentence t3;

        
        // calculating sentence in a file and calculating its score accordingly
        
        for (Calculations t : t2) {

            System.out.println(t);
            if (t.getDiff() == 1) {
                t3 = new File_And_Sentence();
                t3.setFile(t.getName());
                //System.out.println(t.getName());
                Map m = retrieveFile.get(t.getName());
               
                String sent = "";

                int min = t.getMin();
              

                t3.setSentence((String) m.get(min));
                oneshm.put(t.getScore(), t3);

            } 
            
            // if score diff is 2 
            else if (t.getDiff() == 2) {
                t3 = new File_And_Sentence();
                t3.setFile(t.getName());
                Map m = retrieveFile.get(t.getName());
                String sent = "";
                int min = t.getMin();


                t3.setSentence((String) m.get(min));
                twoshm.put(t.getScore(), t3);

            } 
            else {
                t3 = new File_And_Sentence();
                t3.setFile(t.getName());
                Map m = retrieveFile.get(t.getName());
                String sent = "";
                int min = t.getMin();


                t3.setSentence((String) m.get(min));
                rest.put(t.getScore(), t3);
            }
        }
        ArrayList<Float> li = new ArrayList<>();
        for (Float f : oneshm.keySet()) {
            li.add(f);

        }
        
        //sorting the results and displaying
        
        Collections.sort(li);
        Collections.reverse(li);
        for (Float f : li) {
           
            System.out.println(oneshm.get(f));
             Object[] row = new Object[3];
            File_And_Sentence t33  = oneshm.get(f);
            row[0] = t33.getFile();
            row[1] = t33.getSentence();
         
            
        }
        li.clear();
        for (Float f : twoshm.keySet()) {
            li.add(f);

        }
        //sorting the results and displaying
        
        Collections.sort(li);
        Collections.reverse(li);
        for (Float f : li) {
            System.out.println(twoshm.get(f));
            Object[] row = new Object[3];
            File_And_Sentence t33  = twoshm.get(f);
            row[0] = t33.getFile();
            row[1] = t33.getSentence();
            
       
        }

        li.clear();
        for (Float f : rest.keySet()) {
            li.add(f);

        }
        Collections.sort(li);
        Collections.reverse(li);
        for (Float f : li) {
            System.out.println(rest.get(f));
            Object[] row = new Object[3];
            File_And_Sentence t33  = rest.get(f);
            row[0] = t33.getFile();
            row[1] = t33.getSentence();
           
           
        }
       

    }//GEN-LAST:event_SearchButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                try {
                    new MainFrame().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Search;
    private javax.swing.JButton SearchButton;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
